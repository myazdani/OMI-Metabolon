table(df.pathways$SUPER_PATHWAY)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
table(df.pathways$SUPER_PATHWAY)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
table(df.pathways$SUPER_PATHWAY)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
table(df.pathways$SUPER_PATHWAY)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
table(df.pathways$SUPER_PATHWAY)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
nrow(df.super.pathway)
for (i in c(1:length(pathways.list))){
subpathway = names(pathways.list)[i]
print(subpathway)
}
for (i in c(1:length(pathways.list))){
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
}
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
###
# HC-glm-analysis.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
}
else{
num.metabolites = nrow(df.super.pathway)
}
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
###
# HC-glm-analysis.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
else{
num.metabolites = nrow(df.super.pathway)
}
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
}
else{
num.metabolites = nrow(df.super.pathway)
}
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
} else{
num.metabolites = nrow(df.super.pathway)
}
###
# HC-glm-analysis.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
} else{
num.metabolites = nrow(df.super.pathway)
}
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
dim(df)
num.metabolites
head(df)
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df$patient.sample = make.names(row.names(biochem.df))
biochem.df$sample.type = sapply(biochem.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
biochem.df$sample.type[is.na(biochem.df$sample.type)] = "HC"
## turn to long format
library(reshape)
df.m = reshape::melt(biochem.df, id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
df.pre.HC = subset(df.m, sample.type != "Post")
df.pre.HC$sample.type = factor(df.pre.HC$sample.type, levels = c("HC", "Pre"))
## analysis for all metabolites
library(dplyr)
library(broom)
na.omit(df.pre.HC) %>%
group_by(variable) %>%
do(tidy(glm(sample.type ~ value, family = "binomial", .))) %>%
as.data.frame() -> linear_classifiers
na.omit(df.pre.HC) %>%
group_by(variable) %>%
do(glance(glm(sample.type ~ value, family = "binomial", .))) %>%
as.data.frame() -> linear_classifiers.errors
intercepts = subset(linear_classifiers, term == "(Intercept)")
intercepts.sorted = intercepts[order(intercepts$p.value), ]
slopes = subset(linear_classifiers, term == "value")
slopes.sorted = slopes[order(slopes$p.value), ]
aic.sorted = linear_classifiers.errors$variable[order(linear_classifiers.errors$AIC)[c(1:num.metabolites)]]
top10.df = subset(df.m, variable %in% intercepts.sorted$variable[c(1:num.metabolites)])
#top10.df = subset(df.m, variable %in% aic.sorted)
## remove helath and only keep least variance matabolites amongst HC
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) +
geom_boxplot(aes(fill = sample.type)) + xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14)) + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-boxplots.png"),
plot = p, width = 26, height = 18)
names(top10.df)
head(top10.df)
ggplot(top10.df, aes(factor(variable), log10(value))) +
geom_boxplot(aes(fill = sample.type)) + xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14)) + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-boxplots.png"),
plot = p, width = 26, height = 18)
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-slopegraph.png"),
plot = p, width = 26, height = 18)
###
# HC-glm-analysis.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
} else{
num.metabolites = nrow(df.super.pathway)
}
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df$patient.sample = make.names(row.names(biochem.df))
biochem.df$sample.type = sapply(biochem.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
biochem.df$sample.type[is.na(biochem.df$sample.type)] = "HC"
## turn to long format
library(reshape)
df.m = reshape::melt(biochem.df, id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
#########################################################
#
# run glm per metabolites
#
#########################################################
df.pre.HC = subset(df.m, sample.type != "Post")
df.pre.HC$sample.type = factor(df.pre.HC$sample.type, levels = c("HC", "Pre"))
## analysis for all metabolites
library(dplyr)
library(broom)
na.omit(df.pre.HC) %>%
group_by(variable) %>%
do(tidy(glm(sample.type ~ value, family = "binomial", .))) %>%
as.data.frame() -> linear_classifiers
na.omit(df.pre.HC) %>%
group_by(variable) %>%
do(glance(glm(sample.type ~ value, family = "binomial", .))) %>%
as.data.frame() -> linear_classifiers.errors
intercepts = subset(linear_classifiers, term == "(Intercept)")
intercepts.sorted = intercepts[order(intercepts$p.value), ]
slopes = subset(linear_classifiers, term == "value")
slopes.sorted = slopes[order(slopes$p.value), ]
aic.sorted = linear_classifiers.errors$variable[order(linear_classifiers.errors$AIC)[c(1:num.metabolites)]]
top10.df = subset(df.m, variable %in% intercepts.sorted$variable[c(1:num.metabolites)])
#top10.df = subset(df.m, variable %in% aic.sorted)
#########################################################
#
#  make slope graphs
#
#########################################################
## remove helath and only keep least variance matabolites amongst HC
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
names(top10.df)
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) +
geom_boxplot(aes(fill = sample.type)) + xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14)) + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-boxplots.png"),
plot = p, width = 26, height = 18)
ggplot(top10.df, aes(factor(variable), log10(value))) +
geom_boxplot(aes(fill = sample.type)) + xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14)) + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-boxplots.png"),
plot = p, width = 26, height = 18)
###
# HC-glm-analysis.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
if (nrow(df.super.pathway) >= 50) {
num.metabolites = 50
} else{
num.metabolites = nrow(df.super.pathway)
}
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df$patient.sample = make.names(row.names(biochem.df))
biochem.df$sample.type = sapply(biochem.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
biochem.df$sample.type[is.na(biochem.df$sample.type)] = "HC"
## turn to long format
library(reshape)
df.m = reshape::melt(biochem.df, id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
#########################################################
#
# run glm per metabolites
#
#########################################################
df.pre.HC = subset(df.m, sample.type != "Post")
df.pre.HC$sample.type = factor(df.pre.HC$sample.type, levels = c("HC", "Pre"))
## analysis for all metabolites
library(dplyr)
library(broom)
na.omit(df.pre.HC) %>%
group_by(variable) %>%
do(tidy(glm(sample.type ~ value, family = "binomial", .))) %>%
as.data.frame() -> linear_classifiers
na.omit(df.pre.HC) %>%
group_by(variable) %>%
do(glance(glm(sample.type ~ value, family = "binomial", .))) %>%
as.data.frame() -> linear_classifiers.errors
intercepts = subset(linear_classifiers, term == "(Intercept)")
intercepts.sorted = intercepts[order(intercepts$p.value), ]
slopes = subset(linear_classifiers, term == "value")
slopes.sorted = slopes[order(slopes$p.value), ]
aic.sorted = linear_classifiers.errors$variable[order(linear_classifiers.errors$AIC)[c(1:num.metabolites)]]
top10.df = subset(df.m, variable %in% intercepts.sorted$variable[c(1:num.metabolites)])
#top10.df = subset(df.m, variable %in% aic.sorted)
#########################################################
#
#  make slope graphs
#
#########################################################
## remove helath and only keep least variance matabolites amongst HC
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) +
geom_boxplot(aes(fill = sample.type)) + xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14)) + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-boxplots.png"),
plot = p, width = 26, height = 18)
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/glm-intercept/" , subpathway, "-HC-vs-pre-glm-slopegraph.png"),
plot = p, width = 26, height = 18)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/2-glm-metabolites.R')
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
print(dim(df))
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
print(dim(df))
num.loadings.per.pc = 10
num.pcs = 8
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
add.patient.data = function(x.df){
x.df$patient.sample = make.names(row.names(x.df))
x.df$sample.type = sapply(x.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
x.df$sample.type[is.na(x.df$sample.type)] = "HC"
return(x.df)
}
#########################################################
#
# PCA
#
#########################################################
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:10)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/PCA/" , subpathway, "-min-imputation.png"),
plot = p, width = 12, height = 9)
table(df.pathways$SUPER_PATHWAY)
library(reshape)
df.m = reshape::melt(add.patient.data(biochem.df), id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, num.pcs)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) +
geom_boxplot(aes(fill = sample.type)) + xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14)) + ggtitle(subpathway) -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/PCA/" , subpathway, "-min-imputationxw-boxplots.png"),
plot = p, width = 26, height = 18)
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
ggsave(filename = paste0("./figures/ECSC-08-15-from-Adam/superpathway-metabolties/PCA/" , subpathway, "-min-imputation-slopegraph.png"),
plot = p, width = 26, height = 18)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
table(df.pathways$SUPER_PATHWAY)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
length(top.loadings)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
print(names(pathways.list))
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/1-HC-variance-analysis.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/2-glm-metabolites.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/2-glm-metabolites.R')
