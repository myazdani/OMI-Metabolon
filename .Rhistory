i = 1
subpathway = names(pathways.list)[i]
subpathway
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
###
# heatmaps.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
USING_SUPER_PATHWAY = FALSE
if (USING_SUPER_PATHWAY){
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
} else{ #use sub_pathway and only for lipids
lipids = subset(df.pathways, SUPER_PATHWAY == "Lipid")
pathways.list = split(lipids, f = lipids$SUB_PATHWAY)
}
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
heatmap(as.matrix(biochem.df))
head(biochem.df)
i = 2
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
dim(biochem.df)
i = 3
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
dim(biochem.df)
i = 4
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
dim(biochem.df)
i = 5
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
dim(biochem.df)
table(df.pathways$BIOCHEMICAL)
table(df.pathways$SUPER_PATHWAY)
###
# heatmaps.R
###
setwd("~/Documents/OMI/Metabolon/")
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
USING_SUPER_PATHWAY = TRUE
if (USING_SUPER_PATHWAY){
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
} else{ #use sub_pathway and only for lipids
lipids = subset(df.pathways, SUPER_PATHWAY == "Lipid")
pathways.list = split(lipids, f = lipids$SUB_PATHWAY)
}
print(names(pathways.list))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
heatmap(as.matrix(biochem.df))
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
#biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, FUN = function(x) log(as.numeric(x)))
heatmap(as.matrix(biochem.df))
dim(biochem.df)
row.names(biochem.df)
names(df)
names(df.counts)
heatmap(as.matrix(biochem.df), cexRow = .8)
heatmap(as.matrix(biochem.df), cexRow = .5)
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(1,8))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(5,8))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(5,1))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(8,1))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(10,1))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(10,3))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(10,8))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(20,8))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(12,8))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(12,1))
heatmap(as.matrix(biochem.df), cexRow = .5, margins=c(12,0))
heatmap(as.matrix(biochem.df), cexRow = .9, margins=c(12,0))
heatmap(as.matrix(biochem.df), cexRow = .8, margins=c(12,0))
heatmap(as.matrix(biochem.df), cexRow = .7, margins=c(12,0))
heatmap(as.matrix(biochem.df), cexRow = .7, margins=c(5,0))
heatmap(as.matrix(biochem.df), cexRow = .7, margins=c(12,0))
?heatmap
head(biochem.keys)
row.names(biochem.df)
col.names(biochem.df)
colnames(biochem.df)
dim(df)
dim(biochem.df)
names(df)
row.names(df)
head(biochem.df)
head(df)
heatmap(as.matrix(df))
heatmap(as.matrix(log(df)))
?heatmap.2
heatmap(t(as.matrix(log(df))))
library(gplots)
install.packages("gplots")
install.packages("gplots")
library(gplots)
var1 <- round(runif(n = 12, min = 1, max = 2))
var1
var1 <- replace(var1, which(var1 == 2), "magenta")
var1 <- replace(var1, which(var1 == 1), "deepskyblue")
var1 <- replace(var1, which(var1 == 2), "magenta")
var1
heatmap.2(as.matrix(log(df)))
heatmap.2(as.matrix(log(df)), trace = None)
heatmap.2(as.matrix(log(df)), trace = "none")
heatmap.2(as.matrix(df), trace = "none")
colnames(df)
color.var = colnames(df)
color.var
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type
sample.type[is.na(sample.type)] = "HC"
sample.type
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Pre"), "deepskyblue")
sample.type
?heatmap.2
heatmap.2(as.matrix(df), trace = "none", ColSideColors = sample.type)
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
heatmap.2(as.matrix(df), trace = "none", ColSideColors = sample.type)
heatmap.2(as.matrix(df), trace = "none", ColSideColors = sample.type)
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type)
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
i
i = 2
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
head(df)
class(df)
dim(df)
as.matrix(df)
i = 1
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
head(df)
i = 2
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
i = 3
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
i = 1
?heatmap.2
subpathway = names(pathways.list)[i]
print(paste("working on", subpathway))
df.super.pathway = pathways.list[[subpathway]]
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(10,1))
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(1,10))
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(5,10))
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(8,10))
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(8,8))
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(8,12))
heatmap.2(as.matrix(log(df)), trace = "none", ColSideColors = sample.type, margins = c(8,12))
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
heatmap.2(as.matrix(log10(df)), trace = "none", ColSideColors = sample.type, margins = c(8,12))
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
?log
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type, margins = c(8,12))
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
pdf("fig.pdf")
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type, margins = c(8,12))
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
dev.off()
?pdf
?heatmap.2
pdf("fig.pdf")
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type,
margins = c(8,12), cexRow = .1, cexCol = .1)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
dev.off()
pdf("fig.pdf")
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type,
margins = c(8,12), cexRow = .5, cexCol = .5)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
dev.off()
pdf("fig.pdf")
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type,
margins = c(8,12), cexRow = .3, cexCol = .4)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
dev.off()
png("fig.png")
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type,
margins = c(8,12), cexRow = .3, cexCol = .4)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
dev.off()
df.counts = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df.counts = na.omit(df.counts)
df.counts[,-1] = lapply(df.counts[,-1], as.numeric)
for(i in c(2:ncol(df.counts))){
df.counts[is.na(df.counts[,i]),i ] = min(df.counts[,i], na.rm = TRUE)
}
pathways.keys = read.delim("./rawData/ECSC-08-15-from-Adam/metabolite-names-key.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
df.pathways = merge(pathways.keys, df.counts)
USING_SUPER_PATHWAY = TRUE
if (USING_SUPER_PATHWAY){
pathways.list = split(df.pathways, f = df.pathways$SUPER_PATHWAY)
} else{ #use sub_pathway and only for lipids
lipids = subset(df.pathways, SUPER_PATHWAY == "Lipid")
pathways.list = split(lipids, f = lipids$SUB_PATHWAY)
}
df.super.pathway = df.pathways
df = df.super.pathway[,c(1,13:ncol(df.super.pathway))]
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
color.var = colnames(df)
sample.type = sapply(color.var, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
sample.type[is.na(sample.type)] = "HC"
sample.type = replace(sample.type, which(sample.type == "HC"), "black")
sample.type = replace(sample.type, which(sample.type == "Pre"), "magenta")
sample.type = replace(sample.type, which(sample.type == "Post"), "deepskyblue")
pdf("fig.pdf")
heatmap.2(as.matrix(log2(df)), trace = "none", ColSideColors = sample.type,
margins = c(8,12), cexRow = .3, cexCol = .4)
legend("topright",
legend = c("HC", "Pre", "Post"),
col = c("black", "magenta", "deepskyblue"),
lty= 1,
lwd = 5,
cex=.7
)
dev.off()
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/4-heatmaps.R')
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/4-heatmaps.R')
library(SpikeInSubset)
library(Bioconductor)
source("https://bioconductor.org/biocLite.R")
biocLite()
install.packages("SpikeInSubset")
biocLite(c("GenomicFeatures", "SpikeInSubset"))
library(SpikeInSubset)
library(Bioconductor)
library(BiocInstaller)
biocLite(c("GenomicFeatures", "SpikeInSubset"))
biocLite("SpikeInSubset")
pkgs <- rownames(installed.packages())
biocLite(pkgs)
library(SpikeInSubset)
biocLite("SpikeInSubset")
