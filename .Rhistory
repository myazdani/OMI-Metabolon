df = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
df = na.omit
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df$patient.sample = make.names(row.names(biochem.df))
biochem.df$sample.type = sapply(biochem.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
biochem.df$sample.type[is.na(biochem.df$sample.type)] = "HC"
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
df = na.omit(df)
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df$patient.sample = make.names(row.names(biochem.df))
biochem.df$sample.type = sapply(biochem.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
biochem.df$sample.type[is.na(biochem.df$sample.type)] = "HC"
dim(biochem.df)
pca.df = prcomp(biochem.df)
head(biochem.df)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
head(pca.df)
head(pca.df)
class(pca.df)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.result = prcomp(biochem.df)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = as.data.frame(pca.result$x)
head(pca.df)
head(top.loadings)
pca.df$patient.sample = make.names(row.names(pca.df))
pca.df$sample.type = sapply(pca.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
pca.df$sample.type[is.na(pca.df$sample.type)] = "HC"
names(pca.df)
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point()
ggplot(pca.df, aes(x = PC3, y = PC2, colour = sample.type)) + geom_point()
pca.result = prcomp(log(biochem.df))
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = as.data.frame(pca.result$x)
pca.df$patient.sample = make.names(row.names(pca.df))
pca.df$sample.type = sapply(pca.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
pca.df$sample.type[is.na(pca.df$sample.type)] = "HC"
ggplot(pca.df, aes(x = PC3, y = PC2, colour = sample.type)) + geom_point()
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point()
ggplot(pca.df, aes(x = PC5, y = PC2, colour = sample.type)) + geom_point()
d = dist(log(biochem.df))
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
head(fit)
mds.df = as.data.frame(fit$points)
head(mds.df)
add.patient.data = function(biochem.df){
biochem.df$patient.sample = make.names(row.names(biochem.df))
biochem.df$sample.type = sapply(biochem.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
biochem.df$sample.type[is.na(biochem.df$sample.type)] = "HC"
}
mds.df = add.patient.data(as.data.frame(fit$points))
head(mds.df)
add.patient.data = function(x.df){
x.df$patient.sample = make.names(row.names(x.df))
x.df$sample.type = sapply(x.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
x.df$sample.type[is.na(x.df$sample.type)] = "HC"
return(x.df)
}
mds.df = add.patient.data(as.data.frame(fit$points))
head(mds.df)
ggplot(mds.df, aes(x = V1, y = V3, colour = sample.type)) + geom_point()
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
?cmdscale
?dist
d = dist(log(biochem.df), method = "maximum")
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
?prcomp
pca.result = prcomp(log(biochem.df), scale = TRUE)
pca.df = add.patient.data(as.data.frame(pca.result$x))
pca.result = prcomp(log(biochem.df), scale = TRUE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point()
ggplot(pca.df, aes(x = PC3, y = PC2, colour = sample.type)) + geom_point()
ggplot(pca.df, aes(x = PC3, y = PC1, colour = sample.type)) + geom_point()
d = dist(log(biochem.df), method = "maximum")
fit <- isoMDS(d,eig=TRUE, k=2) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
library(MASS)
d = dist(log(biochem.df), method = "maximum")
fit <- isoMDS(d,eig=TRUE, k=2) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
fit <- isoMDS(d, k=2) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
d = dist(log(biochem.df), method = "maximum")
fit <- cmdscale(d, k=2) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
d = dist(log(biochem.df), method = "maximum")
fit <- cmdscale(d, k=2) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
fit <- cmdscale(d, k=2) # k is the number of dim
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
head(fit)
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
d = dist(log(biochem.df), method = "euclidean")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point()
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point()
head(top.loadings)
class(top.loadings)
class(head(top.loadings))
unlist(head(top.loadings))
uname(unlist(head(top.loadings)))
unname(unlist(head(top.loadings)))
unique(unname(unlist(head(top.loadings, 50))))
unique(unname(unlist(head(top.loadings, 10))))
length(unique(unname(unlist(head(top.loadings, 10)))))
length(unique(unname(unlist(head(top.loadings, 11)))))
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:6)])
length(unique(unname(unlist(head(top.loadings, 10)))))
length(unique(unname(unlist(head(top.loadings, 9)))))
length(unique(unname(unlist(head(top.loadings, 8)))))
length(unique(unname(unlist(head(top.loadings, 6)))))
length(unique(unname(unlist(head(top.loadings, 7)))))
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
unique(unname(unlist(head(top.loadings, 10))))
df.m = reshape::melt(biochem.df, id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
library(reshape)
df.m = reshape::melt(biochem.df, id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m = reshape::melt(add.patient.data(biochem.df), id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 10)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
print(p)
source('~/Documents/OMI/Metabolon/scripts/EXSC-08-15RD_from_adam/3-PCA.R')
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
library(MASS)
d = dist(log(biochem.df), method = "euclidean")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point() + ggtitle("MDS") -> p
print(p)
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
print(p)
df = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
min(df)
sapply(df, min)
sapply(df, FUN = function(x) min(x, na.rm = TRUE))
sapply(df, FUN = function(x) min(as.numeric(x), na.rm = TRUE))
min(sapply(df, FUN = function(x) min(as.numeric(x), na.rm = TRUE)))
summary(df)
head(df)
#df = na.omit(df)
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
summary(biochem.df)
sapply(biochem.df, FUN = function(x) min(x, na.rm = TRUE))
min(sapply(biochem.df, FUN = function(x) min(x, na.rm = TRUE)))
biochem.df[is.na(biochem.df)] = 582.6
summary(biochem.df)
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df = na.omit(df)
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
biochem.df[is.na(biochem.df)] = 582.6
add.patient.data = function(x.df){
x.df$patient.sample = make.names(row.names(x.df))
x.df$sample.type = sapply(x.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
x.df$sample.type[is.na(x.df$sample.type)] = "HC"
return(x.df)
}
#########################################################
pca.result = prcomp(log(biochem.df), scale = TRUE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
library(MASS)
d = dist(log(biochem.df), method = "euclidean")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point() + ggtitle("MDS") -> p
print(p)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
pca.result = prcomp(log(biochem.df), scale = FALSE, center = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA")
ggplot(pca.df, aes(x = log(abs(PC1), y = log(abs(PC2)), colour = sample.type)) + geom_point() + ggtitle("PCA")
ggplot(pca.df, aes(x = log(abs(PC1)), y = log(abs(PC2)), colour = sample.type)) + geom_point() + ggtitle("PCA")
ggplot(pca.df, aes(x = PC3, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA")
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA")
df.m = reshape::melt(add.patient.data(biochem.df), id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 10)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
ggplot(top10.df, aes(factor(BIOCHEMICAL), value)) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
df = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
head(df)
df[,-1] = lapply(df[,-1], as.numeric)
sapply(df[,-1], min)
sapply(df[,-1], FUN = function(x) min(x, na.rm = TRUE))
min(sapply(df[,-1], FUN = function(x) min(x, na.rm = TRUE)))
for(i in c(2:ncol(df))){
df[is.na(df[,i]),i ] = min(df[,i], na.rm = TRUE)
}
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
add.patient.data = function(x.df){
x.df$patient.sample = make.names(row.names(x.df))
x.df$sample.type = sapply(x.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
x.df$sample.type[is.na(x.df$sample.type)] = "HC"
return(x.df)
}
#########################################################
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
pca.result = prcomp(log(biochem.df), scale = TRUE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:5)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(p)
#########################################################
library(MASS)
d = dist(log(biochem.df), method = "euclidean")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point() + ggtitle("MDS") -> p
print(p)
d = dist(log(biochem.df), method = "maximum")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point() + ggtitle("MDS") -> p
print(p)
library(reshape)
df.m = reshape::melt(add.patient.data(biochem.df), id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 10)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
print(p)
unique(unname(unlist(head(top.loadings, 10))))
length(unique(unname(unlist(head(top.loadings, 10)))))
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:10)])
unique(top.loadings)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 10)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
print(p)
length( unique(unname(unlist(head(top.loadings, 5)))))
length( unique(unname(unlist(head(top.loadings, 6)))))
length( unique(unname(unlist(head(top.loadings, 7)))))
length( unique(unname(unlist(head(top.loadings, 8)))))
length( unique(unname(unlist(head(top.loadings, 8)))))
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 8)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
print(p)
###
# PCA.R
###
setwd("~/Documents/OMI/Metabolon/")
df = read.delim("./rawData/ECSC-08-15-from-Adam/clean-metabolite-counts.tsv", header = TRUE, stringsAsFactors = FALSE, colClasses = "character")
#########################################################
#
# !!!!!!!!!!!!!!!!!!REMOVE NA'S HERE!!!!!!!!!!!!!!!!!!!!!
#
#########################################################
#df = na.omit(df)
df[,-1] = lapply(df[,-1], as.numeric)
for(i in c(2:ncol(df))){
df[is.na(df[,i]),i ] = min(df[,i], na.rm = TRUE)
}
biochem.keys = data.frame(BIOCHEMICAL = df$BIOCHEMICAL, BIOCHEM.name = make.names(df$BIOCHEMICAL))
## Tranpose data
# first remember the names
row.names(df) = df$BIOCHEMICAL
df = df[,-1]
n <- row.names(df)
# transpose all but the first column (name)
biochem.df <- as.data.frame(t(df), stringsAsFactors = FALSE)
colnames(biochem.df) <- n
names(biochem.df) = make.names(names(biochem.df))
biochem.df[,c(1:ncol(biochem.df))] = lapply(biochem.df, as.numeric)
add.patient.data = function(x.df){
x.df$patient.sample = make.names(row.names(x.df))
x.df$sample.type = sapply(x.df$patient.sample, FUN = function(x) strsplit(x, "CFS.")[[1]][2])
x.df$sample.type[is.na(x.df$sample.type)] = "HC"
return(x.df)
}
#########################################################
#
# PCA
#
#########################################################
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:10)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
print(pca.df)
print(p)
length(unique(unname(unlist(head(top.loadings, 8)))))
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 8)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
#########################################################
#
# PCA
#
#########################################################
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:10)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
#########################################################
#
# MDS
#
#########################################################
library(MASS)
d = dist(log(biochem.df), method = "maximum")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point() + ggtitle("MDS") -> p
#########################################################
#
#  make slope graphs
#
#########################################################
## turn to long format
library(reshape)
df.m = reshape::melt(add.patient.data(biochem.df), id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 8)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
#########################################################
#
# PCA
#
#########################################################
pca.result = prcomp(log(biochem.df), scale = FALSE)
top.loadings = lapply(as.data.frame(pca.result$rotation), FUN = function(x) row.names(pca.result$rotation)[order(abs(x), decreasing = TRUE)][c(1:10)])
pca.df = add.patient.data(as.data.frame(pca.result$x))
ggplot(pca.df, aes(x = PC1, y = PC2, colour = sample.type)) + geom_point() + ggtitle("PCA") -> p
#########################################################
#
# MDS
#
#########################################################
library(MASS)
d = dist(log(biochem.df), method = "maximum")
fit <- cmdscale(d, k=2, eig = TRUE) # k is the number of dim
mds.df = add.patient.data(as.data.frame(fit$points))
ggplot(mds.df, aes(x = V1, y = V2, colour = sample.type)) + geom_point() + ggtitle("MDS") -> p
#########################################################
#
#  make slope graphs
#
#########################################################
## turn to long format
library(reshape)
df.m = reshape::melt(add.patient.data(biochem.df), id.vars = c("patient.sample", "sample.type"), factorsAsStrings = FALSE)
df.m$variable = as.character(df.m$variable)
top10.df = subset(df.m, variable %in% unique(unname(unlist(head(top.loadings, 8)))))
top10.df = merge(top10.df, biochem.keys, by.x = "variable", by.y = "BIOCHEM.name", all.x = TRUE)
top10.df$sample.type = factor(top10.df$sample.type, levels = c("HC", "Pre", "Post"))
ggplot(top10.df, aes(factor(BIOCHEMICAL), log10(value))) + geom_boxplot(aes(fill = sample.type)) + xlab("") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) -> p
print(p)
length(unique(unname(unlist(head(top.loadings, 8)))))
cfs.df = subset(top10.df, sample.type != "HC")
cfs.df$patient.sample = sapply(cfs.df$patient.sample, FUN = function(x) strsplit(x, split = "\\.CFS")[[1]][1])
cfs.df$sample.type = factor(cfs.df$sample.type, levels = c("Pre", "Post"))
loner.patients = c("ID.9", "ID.78", "ID.311", "ID.730")
ggplot(subset(cfs.df, !(patient.sample %in% loner.patients)), aes(x = sample.type, y = value, colour = BIOCHEMICAL, group= BIOCHEMICAL)) +
geom_line() + geom_point(shape=21, fill = "white") + xlab("")  + facet_wrap(~patient.sample) + ylab("") + scale_y_log10() -> p
print(p)
